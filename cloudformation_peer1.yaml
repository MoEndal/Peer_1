AWSTemplateFormatVersion: 2010-09-09
Description: Peer1

Parameters:
  MyBucketName:
    Description: My bucket name
    Type: String
    Default: peer1-cloudformation-bucket

  Peer1Instance:
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - m1.small
      - m2.large
    Description:
      Enter t2.micro, m1.small, or m2.large. Default is t2.micro.
  
  LatestAmiId:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'
     

  
Resources:
  VPCPeer1:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: 10.0.0.0/16
  
  Peer1InternetGateway:
    Type: AWS::EC2::InternetGateway
  
  Peer1GatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties: 
      InternetGatewayId: !Ref Peer1InternetGateway
      VpcId: !Ref VPCPeer1

  Peer1RouteTable:  
    Type: AWS::EC2::RouteTable
    Properties: 
      VpcId: !Ref VPCPeer1

  Peer1RouteOutside:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref Peer1RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref Peer1InternetGateway
  
  AddSubnetToRouteTable:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SubnetAInstance
      RouteTableId: !Ref Peer1RouteTable

  DatabaseSecurityGroup:
    Type: AWS::RDS::DBSecurityGroup
    Properties:
      GroupDescription: RDS database security group - allowing access to our instances and nothing else
      EC2VpcId: !Ref VPCPeer1
      DBSecurityGroupIngress:
        EC2SecurityGroupId: !Ref InstanceSecurityGroup
  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Instance security group allowing access to public and database instances
      GroupName: Peer1_instance
      VpcId: !Ref VPCPeer1
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 5432
        ToPort: 5432
        CidrIp: 0.0.0.0/0

  SubnetAInstance:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: us-east-1a
      MapPublicIpOnLaunch: true
      CidrBlock: 10.0.1.0/24
      VpcId: !Ref VPCPeer1
  SubnetADB:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: us-east-1a
      MapPublicIpOnLaunch: false
      CidrBlock: 10.0.3.0/24
      VpcId: !Ref VPCPeer1
  SubnetBDB:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: us-east-1b
      MapPublicIpOnLaunch: false
      CidrBlock: 10.0.4.0/24
      VpcId: !Ref VPCPeer1
  
  PeerSubnetDBGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties: 
      DBSubnetGroupDescription: Peer1 project 1 database subnet group
      DBSubnetGroupName: peer1dbsubnetgroup
      SubnetIds: [!Ref SubnetADB, !Ref SubnetBDB]

  Peer1AInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref Peer1Instance
      KeyName: joona-kp-virginia-usa
      IamInstanceProfile: Peer_1_Cron_IAM_Role
      ImageId: !Ref LatestAmiId
      SecurityGroupIds: [!Ref InstanceSecurityGroup]
      SubnetId: !Ref SubnetAInstance
      UserData:
        Fn::Base64: 
          !Sub |
            #!/bin/bash
            sudo su
            yum update -y
            yum install git -y
            yum install pip -y
            pip3 install psycopg2-binary
            pip3 install boto3
            su ec2-user
            cd home/ec2-user
            git clone https://github.com/MoEndal/Peer_1.git
            sudo echo '0 0 * * * /usr/bin/python3 /home/ec2-user/Peer_1/sns.py' > /var/spool/cron/ec2-user      
 
  MyRDS:
    Type: AWS::RDS::DBInstance
    Properties:
      DBName: Peer1_timetable
      DBSecurityGroups: [!Ref DatabaseSecurityGroup]
      AllocatedStorage: '20'
      DBSubnetGroupName: !Ref PeerSubnetDBGroup
      DBInstanceClass: db.t3.micro
      Engine: postgres
      MasterUsername: '{{resolve:secretsmanager:Peer_1_secrets:SecretString:user}}'
      MasterUserPassword: '{{resolve:secretsmanager:Peer_1_secrets:SecretString:password}}'